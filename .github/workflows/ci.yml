name: CI for Integration Service FIWARE SystemHandle

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  fiware-sh_CI:
    strategy:
      matrix:
        node: [foxy, galactic, humble]
        include:
          - os: ubuntu-20.04
          - os: ubuntu-22.04
            node: humble
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          path: src/fiware-sh

      - name: Download required dependencies
        run: |
          sudo apt update
          DEBIAN_FRONTEND=noninteractive sudo apt install -y curl git libboost-dev libboost-program-options-dev \
                          libyaml-cpp-dev libwebsocketpp-dev libssl-dev libcurlpp-dev libasio-dev libcurl4-openssl-dev

      - name: Download and install ROS 2 ${{ matrix.node }}
        run: |
          sudo apt install -y libboost-system-dev software-properties-common
          sudo add-apt-repository -y universe
          curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
               -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg]" \
               "http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" \
               | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update && sudo apt install -y python3-colcon-common-extensions python3-colcon-mixin python3-vcstool \
              ros-${{ matrix.node }}-fastrtps ros-${{ matrix.node }}-rmw-fastrtps-cpp \
              ros-${{ matrix.node }}-rclcpp  ros-${{ matrix.node }}-nav-msgs ros-${{ matrix.node }}-geometry-msgs \
              ros-${{ matrix.node }}-ros2pkg

      - name: Check ROS 2 installation
        run: |
          . /opt/ros/${{ matrix.node }}/setup.sh
          ros2 pkg list

      - name: Download the Integration Service
        run: |
          git clone --recursive https://github.com/eProsima/Integration-Service src/integration-service

      - name: Build
        run: |
          . /opt/ros/${{ matrix.node }}/setup.sh
          colcon build --cmake-args -DBUILD_FIWARE_TESTS=ON --event-handlers console_direct+

      - name: Testing
        run: |
          # launch context-broker in a container
          docker run -d --rm --name mongo --network host mongo:4.4 --bind_ip_all
          docker run -d --rm --name broker --network host fiware/orion -dbhost 127.0.0.1

          # launch tests
          . /opt/ros/${{ matrix.node }}/setup.sh
          colcon test --packages-select is-fiware --event-handlers console_direct+
          colcon test-result

          # stop containers
          docker stop mongo broker
